stages:
  - build
  - deploy

variables:
  IMAGE_OPENJDK_GRADLE: gradle:8.11.1-jdk21-alpine
  IMAGE_DOCKER_DIND: docker:27.3.1-alpine3.20
  UBUNTU: ubuntu:latest

# Build Jobs
build-profile:
  image: $IMAGE_OPENJDK_GRADLE
  stage: build
  script:
    - echo "Building profile service..."
    - cd $CI_PROJECT_DIR/profile
    - sh gradlew clean assemble
  artifacts:
    paths:
      - profile/build/libs/profile-0.0.1-SNAPSHOT.jar

build-purchase:
  image: $IMAGE_OPENJDK_GRADLE
  stage: build
  script:
    - echo "Building purchase service..."
    - cd $CI_PROJECT_DIR/purchase
    - sh gradlew clean assemble
  artifacts:
    paths:
      - purchase/build/libs/purchase-0.0.1-SNAPSHOT.jar

build-asset:
  image: $IMAGE_OPENJDK_GRADLE
  stage: build
  script:
    - echo "Building asset service..."
    - cd $CI_PROJECT_DIR/asset
    - sh gradlew clean assemble
  artifacts:
    paths:
      - asset/build/libs/asset-0.0.1-SNAPSHOT.jar

build-finance:
  image: $IMAGE_OPENJDK_GRADLE
  stage: build
  script:
    - echo "Building finance service..."
    - cd $CI_PROJECT_DIR/finance.report
    - sh gradlew clean assemble
  artifacts:
    paths:
      - finance.report/build/libs/finance-0.0.1-SNAPSHOT.jar

build-project:
  image: $IMAGE_OPENJDK_GRADLE
  stage: build
  script:
    - echo "Building project service..."
    - cd $CI_PROJECT_DIR/project
    - sh gradlew clean assemble
  artifacts:
    paths:
      - project/build/libs/project-0.0.1-SNAPSHOT.jar

# Deploy Jobs
deploy-asset:
  image: $UBUNTU
  stage: deploy
  variables:
    RAILWAY_TOKEN: $RAILWAY_TOKEN_STAGING
  script:
    - apt-get update && apt-get install -y curl
    - curl -fsSL https://railway.app/install.sh | sh
    - railway login --browserless
    - railway link --environment Development --project $RAILWAY_PROJECT_ID
    - railway up --service asset
  only:
    - railway-deploy

deploy-finance:
  image: $UBUNTU
  stage: deploy
  variables:
    RAILWAY_TOKEN: $RAILWAY_TOKEN_STAGING
  script:
    - apt-get update && apt-get install -y curl
    - curl -fsSL https://railway.app/install.sh | sh
    - railway login --browserless
    - railway link --environment Development --project $RAILWAY_PROJECT_ID
    - railway up --service finance
  only:
    - railway-deploy

deploy-profile:
  image: $UBUNTU
  stage: deploy
  variables:
    RAILWAY_TOKEN: $RAILWAY_TOKEN_STAGING
  script:
    - apt-get update && apt-get install -y curl
    - curl -fsSL https://railway.app/install.sh | sh
    - railway login --browserless
    - railway link --environment Development --project $RAILWAY_PROJECT_ID
    - railway up --service profile
  only:
    - railway-deploy

deploy-project:
  image: $UBUNTU
  stage: deploy
  variables:
    RAILWAY_TOKEN: $RAILWAY_TOKEN_STAGING
  script:
    - apt-get update && apt-get install -y curl
    - curl -fsSL https://railway.app/install.sh | sh
    - railway login --browserless
    - railway link --environment Development --project $RAILWAY_PROJECT_ID
    - railway up --service project
  only:
    - railway-deploy

deploy-purchase:
  image: $UBUNTU
  stage: deploy
  variables:
    RAILWAY_TOKEN: $RAILWAY_TOKEN_STAGING
  script:
    - apt-get update && apt-get install -y curl
    - curl -fsSL https://railway.app/install.sh | sh
    - railway login --browserless
    - railway link --environment Development --project $RAILWAY_PROJECT_ID
    - railway up --service purchase
  only:
    - railway-deploy
